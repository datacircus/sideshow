// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: coffeeco/v1/order.proto

package coffeecov1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Modified version of google/type/money.proto
type Total_CurrencyCode int32

const (
	Total_CURRENCY_CODE_UNSPECIFIED Total_CurrencyCode = 0
	Total_CURRENCY_CODE_USD         Total_CurrencyCode = 1
)

// Enum value maps for Total_CurrencyCode.
var (
	Total_CurrencyCode_name = map[int32]string{
		0: "CURRENCY_CODE_UNSPECIFIED",
		1: "CURRENCY_CODE_USD",
	}
	Total_CurrencyCode_value = map[string]int32{
		"CURRENCY_CODE_UNSPECIFIED": 0,
		"CURRENCY_CODE_USD":         1,
	}
)

func (x Total_CurrencyCode) Enum() *Total_CurrencyCode {
	p := new(Total_CurrencyCode)
	*p = x
	return p
}

func (x Total_CurrencyCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Total_CurrencyCode) Descriptor() protoreflect.EnumDescriptor {
	return file_coffeeco_v1_order_proto_enumTypes[0].Descriptor()
}

func (Total_CurrencyCode) Type() protoreflect.EnumType {
	return &file_coffeeco_v1_order_proto_enumTypes[0]
}

func (x Total_CurrencyCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Total_CurrencyCode.Descriptor instead.
func (Total_CurrencyCode) EnumDescriptor() ([]byte, []int) {
	return file_coffeeco_v1_order_proto_rawDescGZIP(), []int{1, 0}
}

type Order struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Each Order takes place at a point in Time
	OrderCreated *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=order_created,json=orderCreated,proto3" json:"order_created,omitempty"`
	// An Order can be purchased at a CoffeeCo Location, otherwise where is the coffee going to be made
	// It is true that the Store could be online, but that makes this reference more complicated than necessary
	PurchasedAt *Store `protobuf:"bytes,2,opt,name=purchased_at,json=purchasedAt,proto3" json:"purchased_at,omitempty"`
	// A Customer can Order from our Coffee Location
	Customer *Customer `protobuf:"bytes,3,opt,name=customer,proto3" json:"customer,omitempty"`
	// Each Order may have one or more items. We cannot have an Order without something to Purchase
	Items []*Product `protobuf:"bytes,4,rep,name=items,proto3" json:"items,omitempty"`
	// Each Order has a monetary value
	Total *Total `protobuf:"bytes,5,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *Order) Reset() {
	*x = Order{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coffeeco_v1_order_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Order) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Order) ProtoMessage() {}

func (x *Order) ProtoReflect() protoreflect.Message {
	mi := &file_coffeeco_v1_order_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Order.ProtoReflect.Descriptor instead.
func (*Order) Descriptor() ([]byte, []int) {
	return file_coffeeco_v1_order_proto_rawDescGZIP(), []int{0}
}

func (x *Order) GetOrderCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.OrderCreated
	}
	return nil
}

func (x *Order) GetPurchasedAt() *Store {
	if x != nil {
		return x.PurchasedAt
	}
	return nil
}

func (x *Order) GetCustomer() *Customer {
	if x != nil {
		return x.Customer
	}
	return nil
}

func (x *Order) GetItems() []*Product {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *Order) GetTotal() *Total {
	if x != nil {
		return x.Total
	}
	return nil
}

type Total struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Currency Total_CurrencyCode `protobuf:"varint,1,opt,name=currency,proto3,enum=coffeeco.v1.Total_CurrencyCode" json:"currency,omitempty"`
	Units    uint64             `protobuf:"varint,2,opt,name=units,proto3" json:"units,omitempty"`
	Nanos    uint32             `protobuf:"varint,3,opt,name=nanos,proto3" json:"nanos,omitempty"`
}

func (x *Total) Reset() {
	*x = Total{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coffeeco_v1_order_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Total) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Total) ProtoMessage() {}

func (x *Total) ProtoReflect() protoreflect.Message {
	mi := &file_coffeeco_v1_order_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Total.ProtoReflect.Descriptor instead.
func (*Total) Descriptor() ([]byte, []int) {
	return file_coffeeco_v1_order_proto_rawDescGZIP(), []int{1}
}

func (x *Total) GetCurrency() Total_CurrencyCode {
	if x != nil {
		return x.Currency
	}
	return Total_CURRENCY_CODE_UNSPECIFIED
}

func (x *Total) GetUnits() uint64 {
	if x != nil {
		return x.Units
	}
	return 0
}

func (x *Total) GetNanos() uint32 {
	if x != nil {
		return x.Nanos
	}
	return 0
}

var File_coffeeco_v1_order_proto protoreflect.FileDescriptor

var file_coffeeco_v1_order_proto_rawDesc = []byte{
	0x0a, 0x17, 0x63, 0x6f, 0x66, 0x66, 0x65, 0x65, 0x63, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x63, 0x6f, 0x66, 0x66, 0x65,
	0x65, 0x63, 0x6f, 0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x62, 0x75, 0x66, 0x2f, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x63, 0x6f, 0x66, 0x66, 0x65, 0x65, 0x63, 0x6f, 0x2f, 0x76,
	0x31, 0x2f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x19, 0x63, 0x6f, 0x66, 0x66, 0x65, 0x65, 0x63, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x63, 0x6f, 0x66,
	0x66, 0x65, 0x65, 0x63, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x94, 0x03, 0x0a, 0x05, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0xaa,
	0x01, 0x0a, 0x0d, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x42, 0x69, 0xba, 0x48, 0x66, 0xba, 0x01, 0x63, 0x0a, 0x13, 0x6e, 0x6f, 0x74, 0x5f,
	0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x74, 0x68, 0x65, 0x5f, 0x66, 0x75, 0x74, 0x75, 0x72, 0x65, 0x12,
	0x3f, 0x77, 0x65, 0x20, 0x61, 0x72, 0x65, 0x20, 0x6e, 0x6f, 0x74, 0x20, 0x72, 0x65, 0x61, 0x64,
	0x79, 0x20, 0x74, 0x6f, 0x20, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x20, 0x73, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x64, 0x20, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x20, 0x4d, 0x61, 0x79,
	0x62, 0x65, 0x20, 0x69, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 0x75, 0x74, 0x75, 0x72, 0x65,
	0x1a, 0x0b, 0x74, 0x68, 0x69, 0x73, 0x20, 0x3c, 0x3d, 0x20, 0x6e, 0x6f, 0x77, 0x52, 0x0c, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x3d, 0x0a, 0x0c, 0x70,
	0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x66, 0x66, 0x65, 0x65, 0x63, 0x6f, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x74, 0x6f, 0x72, 0x65, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x0b, 0x70,
	0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x08, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63,
	0x6f, 0x66, 0x66, 0x65, 0x65, 0x63, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x08, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x12, 0x32, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x66, 0x66, 0x65, 0x65, 0x63, 0x6f, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8,
	0x01, 0x01, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x30, 0x0a, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x66, 0x66, 0x65,
	0x65, 0x63, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x06, 0xba, 0x48,
	0x03, 0xc8, 0x01, 0x01, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0xc4, 0x01, 0x0a, 0x05,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x49, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x63, 0x6f, 0x66, 0x66, 0x65, 0x65,
	0x63, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x2e, 0x43, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x42, 0x0c, 0xba, 0x48, 0x09, 0xc8, 0x01, 0x01,
	0x82, 0x01, 0x03, 0x22, 0x01, 0x00, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x05, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x61, 0x6e, 0x6f, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6e, 0x61, 0x6e, 0x6f, 0x73, 0x22, 0x44, 0x0a, 0x0c,
	0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x19,
	0x43, 0x55, 0x52, 0x52, 0x45, 0x4e, 0x43, 0x59, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x55, 0x4e,
	0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x43,
	0x55, 0x52, 0x52, 0x45, 0x4e, 0x43, 0x59, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x55, 0x53, 0x44,
	0x10, 0x01, 0x42, 0xa5, 0x01, 0x0a, 0x0f, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x66, 0x66, 0x65,
	0x65, 0x63, 0x6f, 0x2e, 0x76, 0x31, 0x42, 0x0a, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x50, 0x01, 0x5a, 0x39, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x64, 0x61, 0x74, 0x61, 0x63, 0x69, 0x72, 0x63, 0x75, 0x73, 0x2f, 0x73, 0x69, 0x64, 0x65,
	0x73, 0x68, 0x6f, 0x77, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x63, 0x6f, 0x66, 0x66, 0x65, 0x65, 0x63,
	0x6f, 0x2f, 0x76, 0x31, 0x3b, 0x63, 0x6f, 0x66, 0x66, 0x65, 0x65, 0x63, 0x6f, 0x76, 0x31, 0xa2,
	0x02, 0x03, 0x43, 0x58, 0x58, 0xaa, 0x02, 0x0b, 0x43, 0x6f, 0x66, 0x66, 0x65, 0x65, 0x63, 0x6f,
	0x2e, 0x56, 0x31, 0xca, 0x02, 0x0b, 0x43, 0x6f, 0x66, 0x66, 0x65, 0x65, 0x63, 0x6f, 0x5c, 0x56,
	0x31, 0xe2, 0x02, 0x17, 0x43, 0x6f, 0x66, 0x66, 0x65, 0x65, 0x63, 0x6f, 0x5c, 0x56, 0x31, 0x5c,
	0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0c, 0x43, 0x6f,
	0x66, 0x66, 0x65, 0x65, 0x63, 0x6f, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_coffeeco_v1_order_proto_rawDescOnce sync.Once
	file_coffeeco_v1_order_proto_rawDescData = file_coffeeco_v1_order_proto_rawDesc
)

func file_coffeeco_v1_order_proto_rawDescGZIP() []byte {
	file_coffeeco_v1_order_proto_rawDescOnce.Do(func() {
		file_coffeeco_v1_order_proto_rawDescData = protoimpl.X.CompressGZIP(file_coffeeco_v1_order_proto_rawDescData)
	})
	return file_coffeeco_v1_order_proto_rawDescData
}

var file_coffeeco_v1_order_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_coffeeco_v1_order_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_coffeeco_v1_order_proto_goTypes = []interface{}{
	(Total_CurrencyCode)(0),       // 0: coffeeco.v1.Total.CurrencyCode
	(*Order)(nil),                 // 1: coffeeco.v1.Order
	(*Total)(nil),                 // 2: coffeeco.v1.Total
	(*timestamppb.Timestamp)(nil), // 3: google.protobuf.Timestamp
	(*Store)(nil),                 // 4: coffeeco.v1.Store
	(*Customer)(nil),              // 5: coffeeco.v1.Customer
	(*Product)(nil),               // 6: coffeeco.v1.Product
}
var file_coffeeco_v1_order_proto_depIdxs = []int32{
	3, // 0: coffeeco.v1.Order.order_created:type_name -> google.protobuf.Timestamp
	4, // 1: coffeeco.v1.Order.purchased_at:type_name -> coffeeco.v1.Store
	5, // 2: coffeeco.v1.Order.customer:type_name -> coffeeco.v1.Customer
	6, // 3: coffeeco.v1.Order.items:type_name -> coffeeco.v1.Product
	2, // 4: coffeeco.v1.Order.total:type_name -> coffeeco.v1.Total
	0, // 5: coffeeco.v1.Total.currency:type_name -> coffeeco.v1.Total.CurrencyCode
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_coffeeco_v1_order_proto_init() }
func file_coffeeco_v1_order_proto_init() {
	if File_coffeeco_v1_order_proto != nil {
		return
	}
	file_coffeeco_v1_customer_proto_init()
	file_coffeeco_v1_product_proto_init()
	file_coffeeco_v1_store_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_coffeeco_v1_order_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Order); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coffeeco_v1_order_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Total); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_coffeeco_v1_order_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_coffeeco_v1_order_proto_goTypes,
		DependencyIndexes: file_coffeeco_v1_order_proto_depIdxs,
		EnumInfos:         file_coffeeco_v1_order_proto_enumTypes,
		MessageInfos:      file_coffeeco_v1_order_proto_msgTypes,
	}.Build()
	File_coffeeco_v1_order_proto = out.File
	file_coffeeco_v1_order_proto_rawDesc = nil
	file_coffeeco_v1_order_proto_goTypes = nil
	file_coffeeco_v1_order_proto_depIdxs = nil
}
